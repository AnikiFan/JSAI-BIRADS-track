Timer unit: 1e-07 s

Total time: 3.91518 s
File: D:\15800\Workspace\testB\project\model\Tester.py
Function: __init__ at line 16

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    16                                               @profile
    17                                               def __init__(self,model_folder_path,format='pt',half=True):
    18         1        379.0    379.0      0.0          info("init test")
    19         1   13850247.0    1e+07     35.4          self.seg_model = torch.jit.load(os.path.join(model_folder_path,'segmentation','FCB_half.torchscript')).to("cuda")
    20                                                   # 自定义图像转换
    21         2        183.0     91.5      0.0          self.transform = transforms.Compose([
    22         1       1160.0   1160.0      0.0              transforms.Resize((352,352),antialias=True),
    23         1        517.0    517.0      0.0              transforms.Normalize((0.5,0.5,0.5),(0.5,0.5,0.5))
    24                                                   ])
    25         1     155008.0 155008.0      0.4          self.seg_model.eval()
    26         1       2977.0   2977.0      0.0          self.preprocess = Preprocess(half)
    27                                           
    28                                           
    29                                                   # 实例化cla所需模型
    30         1     862174.0 862174.0      2.2          self.cla_full = YOLO(os.path.join(model_folder_path,'cla','full.'+format),task=TASK)
    31         1    5894747.0    6e+06     15.1          self.cla_full(**YOLO_PARAMS)
    32         1     889110.0 889110.0      2.3          self.cla_0_1 = YOLO(os.path.join(model_folder_path,'cla','full_2_3.'+format),task=TASK)
    33         1     752645.0 752645.0      1.9          self.cla_01_2345 = YOLO(os.path.join(model_folder_path,'cla','full_23_4A4B4C5.'+format),task=TASK)
    34         1     920903.0 920903.0      2.4          self.cla_2_345 = YOLO(os.path.join(model_folder_path,'cla','full_4A_4B4C5.'+format),task=TASK)
    35         1     986381.0 986381.0      2.5          self.cla_3_45 = YOLO(os.path.join(model_folder_path,'cla','full_4B_4C5.'+format),task=TASK)
    36         1     913155.0 913155.0      2.3          self.cla_4_5 = YOLO(os.path.join(model_folder_path,'cla','full_4C_5.'+format),task=TASK)
    37                                           
    38                                                   # 实例化boudary特征所需模型
    39         1    1472487.0    1e+06      3.8          self.boundary_full = YOLO(os.path.join(model_folder_path,'boundary','full.'+format),task=TASK)
    40         1    1674354.0    2e+06      4.3          self.boundary_box = YOLO(os.path.join(model_folder_path,'boundary','box.'+format),task=TASK)
    41                                           
    42                                                   # 实例化calcification特征所需模型
    43         1    1611984.0    2e+06      4.1          self.calcification_full = YOLO(os.path.join(model_folder_path,'calcification','full.'+format),task=TASK)
    44         1    1676479.0    2e+06      4.3          self.calcification_box = YOLO(os.path.join(model_folder_path,'calcification','box.'+format),task=TASK)
    45         1    1488166.0    1e+06      3.8          self.calcification_masked = YOLO(os.path.join(model_folder_path,'calcification','masked.'+format),task=TASK)
    46                                           
    47                                                   # 实例化direction特征所需模型
    48         1     898200.0 898200.0      2.3          self.direction_full = YOLO(os.path.join(model_folder_path,'direction','full.'+format),task=TASK)
    49                                           
    50                                                   # 实例化shape特征所需模型
    51         1    1307336.0    1e+06      3.3          self.shape_full = YOLO(os.path.join(model_folder_path,'shape','full.'+format),task=TASK)
    52         1    2288516.0    2e+06      5.8          self.shape_box = YOLO(os.path.join(model_folder_path,'shape','box.'+format),task=TASK)
    53         1    1504525.0    2e+06      3.8          self.shape_masked = YOLO(os.path.join(model_folder_path,'shape','masked.'+format),task=TASK)
    54         1        201.0    201.0      0.0          info("finish init")

Total time: 72.7677 s
File: D:\15800\Workspace\testB\project\model\Tester.py
Function: cla_predict at line 57

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    57                                               @torch.no_grad()
    58                                               @profile
    59                                               def cla_predict(self,image):
    60       671      60380.0     90.0      0.0          origin = cv2.imread(image)
    61       671      37621.0     56.1      0.0          origin = self.cla_full.predictor.preprocess([origin])
    62       671   67345177.0 100365.4      9.3          cla_full = self.cla_full(origin,**YOLO_PARAMS)[0].probs.data
    63       671   62015268.0  92422.2      8.5          cla_01_2345__01,cla_01_2345__2345 = self.cla_01_2345(origin,**YOLO_PARAMS)[0].probs.data
    64       671     123153.0    183.5      0.0          cla_0_1__0,cla_0_1__1 = self.cla_0_1(origin,**YOLO_PARAMS)[0].probs.data
    65       671   96419252.0 143694.9     13.3          cla_2_345__2,cla_2_345__345 = self.cla_2_345(origin,**YOLO_PARAMS)[0].probs.data
    66       671      75764.0    112.9      0.0          cla_3_45__3,cla_3_45__45 = self.cla_3_45(origin,**YOLO_PARAMS)[0].probs.data
    67       671  100589253.0 149909.5     13.8          cla_4_5__4,cla_4_5__5 = self.cla_4_5(origin,**YOLO_PARAMS)[0].probs.data
    68       671      76944.0    114.7      0.0          prob_result = torch.Tensor([
    69       671   98493529.0 146786.2     13.5          cla_01_2345__01 * cla_0_1__0,
    70       671      74728.0    111.4      0.0          cla_01_2345__01 * cla_0_1__1,
    71       671   98578790.0 146913.2     13.5          cla_01_2345__2345 * cla_2_345__2,
    72       671      75052.0    111.9      0.0          cla_01_2345__2345 * cla_2_345__345 * cla_3_45__3,
    73       671   98892596.0 147380.9     13.6          cla_01_2345__2345 * cla_2_345__345 * cla_3_45__45 * cla_4_5__4,
    74       671      74898.0    111.6      0.0          cla_01_2345__2345 * cla_2_345__345 * cla_3_45__45 * cla_4_5__5,
    75       671   97792829.0 145741.9     13.4          ]).to('cuda')
    76       671      73737.0    109.9      0.0          result = Tester.majority_ensemble([cla_full,prob_result])
    77      2013    2031123.0   1009.0      0.3          return result

Total time: 237.664 s
File: D:\15800\Workspace\testB\project\model\Tester.py
Function: fea_predict at line 90

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    90                                                   masked = make_masked(heatmap,cropped)

  3.92 seconds - D:\15800\Workspace\testB\project\model\Tester.py:16 - __init__
 72.77 seconds - D:\15800\Workspace\testB\project\model\Tester.py:57 - cla_predict
237.66 seconds - D:\15800\Workspace\testB\project\model\Tester.py:90 - fea_predict
