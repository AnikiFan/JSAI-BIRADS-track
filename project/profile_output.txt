Timer unit: 1e-07 s

Total time: 64.4412 s
File: D:\15800\Workspace\batched_testB\project\model\Tester.py
Function: cla_predict at line 53

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    53                                               @torch.no_grad()
    54                                               @profile
    55                                               def cla_predict(self,image):
    56       671      60259.0     89.8      0.0          info("cla_predict开始")
    57       671      37237.0     55.5      0.0          info("cla读取图像")
    58       671   69491498.0 103564.1     10.8          origin = cv2.imread(image)
    59       671   59633484.0  88872.6      9.3          origin = self.cla_full.predictor.preprocess([origin])
    60       671     103094.0    153.6      0.0          info("cla_full")
    61       671   86789563.0 129343.6     13.5          cla_full = self.cla_full(origin,verbose=False)[0].probs.data
    62       671      70180.0    104.6      0.0          info("cla_01_2345")
    63       671   86359206.0 128702.2     13.4          cla_01_2345__01,cla_01_2345__2345 = self.cla_01_2345(origin,verbose=False)[0].probs.data
    64       671      67631.0    100.8      0.0          info("cla_0_1")
    65       671   84179006.0 125453.1     13.1          cla_0_1__0,cla_0_1__1 = self.cla_0_1(origin,verbose=False)[0].probs.data
    66       671      66375.0     98.9      0.0          info("cla_2_345")
    67       671   84391101.0 125769.2     13.1          cla_2_345__2,cla_2_345__345 = self.cla_2_345(origin,verbose=False)[0].probs.data
    68       671      66047.0     98.4      0.0          info("cla_3_45")
    69       671   83256641.0 124078.5     12.9          cla_3_45__3,cla_3_45__45 = self.cla_3_45(origin,verbose=False)[0].probs.data
    70       671      64438.0     96.0      0.0          info("cla_4_5")
    71       671   83759487.0 124827.8     13.0          cla_4_5__4,cla_4_5__5 = self.cla_4_5(origin,verbose=False)[0].probs.data
    72       671      66757.0     99.5      0.0          info("bayes")
    73      2013    1910951.0    949.3      0.3          prob_result = torch.Tensor([
    74       671     257391.0    383.6      0.0          cla_01_2345__01 * cla_0_1__0,
    75       671     169239.0    252.2      0.0          cla_01_2345__01 * cla_0_1__1,
    76       671     165894.0    247.2      0.0          cla_01_2345__2345 * cla_2_345__2,
    77       671     331788.0    494.5      0.1          cla_01_2345__2345 * cla_2_345__345 * cla_3_45__3,
    78       671     479287.0    714.3      0.1          cla_01_2345__2345 * cla_2_345__345 * cla_3_45__45 * cla_4_5__4,
    79       671     467172.0    696.2      0.1          cla_01_2345__2345 * cla_2_345__345 * cla_3_45__45 * cla_4_5__5,
    80       671     382652.0    570.3      0.1          ]).to('cuda')
    81       671      67830.0    101.1      0.0          info("ensemble cla")
    82       671    1701265.0   2535.4      0.3          result = Tester.majority_ensemble([cla_full,prob_result])
    83       671      16249.0     24.2      0.0          return result

Total time: 330.636 s
File: D:\15800\Workspace\batched_testB\project\model\Tester.py
Function: fea_predict at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                               @torch.no_grad()
    87                                               @profile
    88                                               def fea_predict(self, image):
    89       983      92671.0     94.3      0.0          info("fea_predict开始")
    90       983      54813.0     55.8      0.0          info("fea读取图像")
    91       983   77277277.0  78613.7      2.3          origin = cv2.imread(image)
    92       983     138188.0    140.6      0.0          info("removeFrame")
    93       983  203410483.0 206928.3      6.2          top,left,h,w = removeFrame(origin.transpose((2,0,1)))
    94       983      44030.0     44.8      0.0          cropped = origin[top:top+h,left:left+w]
    95       983  908979884.0 924699.8     27.5          heatmap = self.seg_model(self.transform(cropped).unsqueeze(0).to('cuda')).sigmoid() # 生成热图
    96       983     121547.0    123.6      0.0          info("heatmap插值")
    97       983  171933230.0 174906.6      5.2          heatmap = F.interpolate(heatmap,size=(h,w),mode='bilinear',align_corners=False).cpu()
    98       983     135009.0    137.3      0.0          info("mask")
    99       983   72028545.0  73274.2      2.2          mask = make_mask(heatmap)
   100       983     128398.0    130.6      0.0          info("box")
   101       983   24892391.0  25322.9      0.8          box = make_box_map(cropped,cv2.cvtColor(mask,cv2.COLOR_RGB2GRAY))
   102       983      92281.0     93.9      0.0          info("masked")
   103       983   93010804.0  94619.3      2.8          masked = make_masked(heatmap,cropped)
   104                                           
   105       983   69051720.0  70245.9      2.1          origin = self.cla_full.predictor.preprocess([origin])
   106       983   30403549.0  30929.3      0.9          box = self.cla_full.predictor.preprocess([box])
   107       983   54248912.0  55187.1      1.6          masked = self.cla_full.predictor.preprocess([masked])
   108                                           
   109       983     140966.0    143.4      0.0          info("boundary_full")
   110       983  190147279.0 193435.7      5.8          boundary_full = self.boundary_full(origin,verbose=False)[0].probs.data
   111       983      97889.0     99.6      0.0          info("boundary_box")
   112       983  185584833.0 188794.3      5.6          boundary_box = self.boundary_box(box,verbose=False)[0].probs.data
   113       983      96153.0     97.8      0.0          info("ensemble boundary")
   114       983    1866059.0   1898.3      0.1          boundary = Tester.max_ensemble([boundary_full,boundary_box])
   115                                           
   116       983      89159.0     90.7      0.0          info("calcification_full")
   117       983  185766023.0 188978.7      5.6          calcification_full = self.calcification_full(origin,verbose=False)[0].probs.data
   118       983      93405.0     95.0      0.0          info("calcification_box")
   119       983  185982386.0 189198.8      5.6          calcification_box = self.calcification_box(box,verbose=False)[0].probs.data
   120       983      94569.0     96.2      0.0          info("calcification_masked")
   121       983  182111495.0 185260.9      5.5          calcification_masked = self.calcification_masked(masked,verbose=False)[0].probs.data
   122       983      94110.0     95.7      0.0          info("ensemble calcification")
   123       983    2383089.0   2424.3      0.1          calcification = Tester.majority_ensemble([calcification_full,calcification_box,calcification_masked])
   124                                           
   125       983      91736.0     93.3      0.0          info("direction_full")
   126       983  117500594.0 119532.6      3.6          direction = self.direction_full(origin,verbose=False)[0].probs.top1
   127                                           
   128       983      98987.0    100.7      0.0          info("shape_full")
   129       983  181509720.0 184648.7      5.5          shape_full = self.shape_full(origin,verbose=False)[0].probs.data
   130       983      88613.0     90.1      0.0          info("shape_box")
   131       983  182198792.0 185349.7      5.5          shape_box = self.shape_box(box,verbose=False)[0].probs.data
   132       983      89151.0     90.7      0.0          info("shape_masked")
   133       983  182330675.0 185483.9      5.5          shape_masked = self.shape_masked(masked,verbose=False)[0].probs.data
   134                                           
   135                                           
   136       983      90358.0     91.9      0.0          info("ensemble shape")
   137       983    1736652.0   1766.7      0.1          shape = Tester.average_ensemble([shape_full,shape_box,shape_masked])
   138                                                   
   139       983      36726.0     37.4      0.0          return boundary,calcification,direction,shape

 64.44 seconds - D:\15800\Workspace\batched_testB\project\model\Tester.py:53 - cla_predict
330.64 seconds - D:\15800\Workspace\batched_testB\project\model\Tester.py:86 - fea_predict
